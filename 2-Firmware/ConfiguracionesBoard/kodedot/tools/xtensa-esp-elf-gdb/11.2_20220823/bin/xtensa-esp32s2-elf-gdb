#!/usr/bin/env bash
# Check if python have dynamic library. If not - use gdb without-python
on_exit() {
	rm -f $GDB_WRAPPER_TEMP_BINARY
}
trap on_exit EXIT

print_message() {
	if [[ "${ESP_DEBUG_TRACE:-}" -gt 0 ]]; then
		echo "$1"
	fi
}

run_without_python() {
	print_message "Run without python"
	"$GDB_WRAPPER_BIN_DIR/xtensa-esp-elf-gdb-no-python" --mcpu=esp32s2 "$@"
	exit $?
}

GDB_WRAPPER_BIN_DIR="$(cd "$(dirname "$0")"; pwd)"
GDB_WRAPPER_PYTHON_VERSION=$(python3 -c 'import sys; import sysconfig; print("{}.{}".format(sys.version_info.major, sys.version_info.minor)) if sysconfig.get_config_var("INSTSONAME").split(".")[-1] != "a" else exit(1)' 2> /dev/null)
GDB_WRAPPER_PYTHON_LIB_PATH=$(python3 -c 'import sys; from sysconfig import get_config_var; from pathlib import Path; libraryPath1="%s/%s" % (get_config_var("PYTHONFRAMEWORKPREFIX"), get_config_var("INSTSONAME")); libraryPath2="%s/%s" % (get_config_var("LIBDIR"), get_config_var("INSTSONAME")); p=Path(libraryPath1); print(libraryPath1) if p.is_file() else print(libraryPath2)' 2> /dev/null)

if [[ -n "${GDB_WRAPPER_PYTHON_VERSION}" && -x "$(command -v install_name_tool)" && -x "${GDB_WRAPPER_BIN_DIR}/xtensa-esp-elf-gdb-${GDB_WRAPPER_PYTHON_VERSION}" && -f "${GDB_WRAPPER_PYTHON_LIB_PATH}" ]]; then
	GDB_WRAPPER_TEMP_BINARY=$(mktemp "${GDB_WRAPPER_BIN_DIR}/xtensa-esp-elf-gdb-${GDB_WRAPPER_PYTHON_VERSION}.XXXXXXX")
	if [ $? != 0 ]; then
		print_message "Error: failed to create file in \"${GDB_WRAPPER_BIN_DIR}\""
		run_without_python "$@"
	fi
	cp "${GDB_WRAPPER_BIN_DIR}/xtensa-esp-elf-gdb-${GDB_WRAPPER_PYTHON_VERSION}" "${GDB_WRAPPER_TEMP_BINARY}"
	chmod 755 "${GDB_WRAPPER_TEMP_BINARY}"
	install_name_tool -change /Library/Frameworks/Python.framework/Versions/${GDB_WRAPPER_PYTHON_VERSION}/Python "${GDB_WRAPPER_PYTHON_LIB_PATH}" "${GDB_WRAPPER_TEMP_BINARY}"
	print_message "With python-${GDB_WRAPPER_PYTHON_VERSION}"
	("${GDB_WRAPPER_TEMP_BINARY}" --mcpu=esp32s2 --batch-silent && exit 0) 2> /dev/null
	if [ $? == 0 ]; then
		"${GDB_WRAPPER_TEMP_BINARY}" --mcpu=esp32s2 "$@"
	else
		print_message "Fallback: can not run GDB with python support"
		run_without_python "$@"
	fi
	exit $?
else
	if [[ -n "${GDB_WRAPPER_PYTHON_VERSION}" && -x "$(command -v install_name_tool)" ]]; then
		if [[ ! -x "${GDB_WRAPPER_BIN_DIR}/xtensa-esp-elf-gdb-${GDB_WRAPPER_PYTHON_VERSION}" ]]; then
			print_message "Python-${GDB_WRAPPER_PYTHON_VERSION} is not supported"
		elif [[ ! -f "${GDB_WRAPPER_PYTHON_LIB_PATH}" ]]; then
			print_message "Error: can not reach python lib \"${GDB_WRAPPER_PYTHON_LIB_PATH}\""
		fi
	fi
	run_without_python "$@"
fi
